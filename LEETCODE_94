#QUESTION:
#INORDER TRAVERSAL.
#Given the root of a binary tree, return the inorder traversal of its nodes' values.

#Example 1:
#Input: root = [1,null,2,3]
#Output: [1,3,2]

#Example 2:
#Input: root = []
#Output: []

#Example 3:
#Input: root = [1]
#Output: [1]

#Constraints:
#The number of nodes in the tree is in the range [0, 100].
#-100 <= Node.val <= 100

#ANSWER:
# Definition for a binary tree node.
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
class Solution:
    def inorderTraversal(self, root) :
         #tc and sc are o(n) and iteratively done
            stack=[]
            result=[]
            while root is not None or stack!=[]:
                while root is not None:
                    stack.append(root)
                    root=root.left
                root=stack.pop()
                result.append(root.val)
                root=root.right
            return result 
